#!/bin/bash
################################################################
#
# GUI wrapper for lglaf
# Copyright (C): 2017, steadfasterX <steadfastX|boun.cr>
#
################################################################


# the vars for the lglaf GUI
VARS=lglafgui.vars
source $VARS
[ $? -ne 0 ] && "ERROR: Missing requirement <$VARS>." && exit 3

# the functions for the lglaf GUI
FUNCS=lglafgui.func
source $FUNCS 
[ $? -ne 0 ] && "ERROR: Missing requirement <$FUNCS>." && exit 3

# check requirements:
[ ! -x $YAD ]&& F_ECHOLOG "ERROR: Missing requirement <yad>. Install YAD and try again!" && F_EXIT yad-missing 3

# check root:
ME=$(id -u)
if [ "$ME" -ne 0 ];then
    echo -e '\nI need more POWER! Press ENTER to restart with root perms (or CTRL+C to abort)' 
    read DUMMY

    sudo $0 & >> /dev/null 2>&1
    F_EXIT restarted-as-root
fi

DEVINF=$(F_GETINFO)
for i in $DEVINF;do
    case ${i/:*/} in
        battery_level) LGBATT=${i/*:/};;
        model_name) LGMODEL=${i/*:/};;
        device_sw_version) LGSWV=${i/*:/};;
        secure_device) LGSEC=${i/*:/};;
        device_factory_version) LGFACV=${i/*:/};;
        target_country) LGCOUNTRY=${i/*:/};;
        *) F_ELOG "unknown parameter: $i" ;;
    esac
done        

$YAD --center --width=600 --title="$YTITLE" --text "\n  LGUP NG is a replacement for the windows software LGUP\n  and brought to you by <b>steadfasterX</b> and the awesome LGLAF code by Peter Wu!\n\n  LGLAF origin: <a href='https://github.com/Lekensteyn/lglaf'>Source</a>\n  LGLAF NG: <a href='https://github.com/steadfasterX/lglaf'>Source</a> and <a href='https://tinyurl.com/lgupsfx'>Support thread</a>\n\n  The following comes directly from your device:" \
    --form \
    --field="  Device model":RO $LGMODEL \
    --field="  Firmware":RO $LGSWV \
    --field="  Full firmware":RO $LGFACV \
    --field="  Country":RO $LGCOUNTRY \
    --field="  Secure device":RO $LGSEC \
    --field="  Battery level":RO $LGBATT \
    --field=:LBL true \
    --buttons-layout=spread \
    --button="Extract KDZ file":1 \
    --button="Flash KDZ file":2
UMODE=$?

if [ $UMODE -eq 1 ];then
    EXCHOICES=$($YAD --center --width=800 --title="$YTITLE - EXTRACT" --always-print-result --form \
        --field="KDZ file":FL --file-filter="KDZ files (*.kdz)| *.kdz *.KDZ"\
        --field="Target directory":DIR)
    F_ELOG "returned: $EXCHOICES"
    KDZFILE=$(echo "$EXCHOICES" | cut -d '|' -f 1)
    TARGDIR=$(echo "$EXCHOICES" | cut -d '|' -f 2)
    
    F_ELOG "KDZFILE = $KDZFILE, TARGDIR = $TARGDIR"

    [ ! -f "$KDZFILE" ] && F_ERR "EXTRACTKDZ" 3 "$KDZFILE does not exists or is not readable!"
    [ ! -z "$TARGDIR" ] && [ ! -d "$TARGDIR" ] && echo mkdir -p $TARGDIR

    F_EXTRACTKDZ "$KDZFILE" "$TARGDIR"

fi

if [ $UMODE -eq 2 ];then
    $YAD --center --width=800 --title="$YTITLE" --text "\n  When proceeding you accept that there is no guarantee for nothing - nowhere.\n  I do my best to avoid problems but we all are humans right?\n  You do this on your own responsibility and own risk no matter what.\n\nSelect a KDZ file to flash:" --form \
        --field="":FL " " \
        --field="\n":LBL \
        --field="Factory Reset\t(if unchecked may result in bootloop)":CHK \
        --field="Model Check\t(if unchecked may result in HARD BRICK)":CHK \
        --field="ARB Check\t(if unchecked may result in HARD BRICK)":CHK \
        true true true true \
        --button="Agree &amp; Continue":0 \
        --button="Cancel":1
    F_KDZFLASH
fi

echo all done


