#!/bin/bash
################################################################
#
# SALT - [S]teadfasterX [A]ll-in-one [L]G [T]ool
#
# Copyright (C): 2017, steadfasterX <steadfastX|boun.cr>
#
# Main program for SALT
#
################################################################

# the vars for SALT
VARS="${0%/*}/salt.vars"
source $VARS
[ $? -ne 0 ] && "ERROR: Missing requirement <$VARS>." && exit 3

# the functions for the lglaf GUI
FUNCS="${0%/*}/salt.func"
source $FUNCS 
[ $? -ne 0 ] && "ERROR: Missing requirement <$FUNCS>." && exit 3

echo -e "$(date '+%F %T'): Starting $TNAME v${VERSION}!\n****************************************************\n" > $LOG

# check requirements:
[ ! -x $YAD ]&& F_ELOG "FATAL ERROR!! Missing requirement <yad>. Install YAD and try again!" && F_EXIT yad-missing 3
[ ! -x $LAFTERM ] && F_ERR no-lafterminal 3 "\n  ERROR!\n\n  Missing xTerminal (usually xterm).\n  Install xterm or check salt.vars file."
[ ! -x $GIT ] && F_ERR no-git 3 "\n  ERROR!\n\n  Missing GIT client.\n  Install git or check salt.vars file."

# check root:
ME=$(id -u)
if [ "$ME" -ne 0 ];then
    echo -e '\nI need more POWER! If asked now type in your sudo password to restart with root perms (wait 20s or press CTRL+C to abort)'
    sudo $0 $@ &
    sleep 20s
    F_LOG "no-root mode ending now"
    exit 0
fi

# check if we are alone
F_EGO

# catch ctrl+c for a clean exit
trap "F_EXIT 'ctrl+c pressed' 0 full" SIGINT


# check the base:
if [ ! -d "$LAFPATH" ];then
    F_ELOG "First start of SALT? Expected LG LAF NG here: $LAFPATH"
    DLLAF=$(F_MSG 400 "\n  First start of SALT?\n\n  Expected <b><u>lglaf</u></b> here:\n  ${LAFPATH}\n\n  but it is missing..\n\n  Should I download it for you now?" "--button=Yes:0 --button=Abort:1")
    #DLLAF=$MERR
    if [ "$DLLAF" -eq 0 ];then
        $GIT clone --progress $LAFGIT $LAFPATH 2>&1 | $FYAD --title="$YTITLE - UPDATING" --text="\n  <b>Installing LGLAF ...</b>\n" --height=600 --width=700 --text-info --listen --tail --button=Close
    else
        F_ERR lafupdate $DLLAF "\n  Without this SALT will not work!\n  ABORTED. \n"
    fi
fi
if [ ! -d "$KDZTOOLS" ];then
    F_ELOG "First start of SALT? Expected kdztools here: $KDZTOOLS"
    DLKDZ=$(F_MSG 400 "\n  First start of SALT?\n\n  Expected <b><u>kdztools</u></b> here:\n  ${KDZTOOLS}\n\n  but it is missing..\n\n  Should I download it for you now?" "--button=Yes:0 --button=Abort:1")
    if [ "$DLKDZ" -eq 0 ];then
        $GIT clone --progress $KDZGIT $KDZTOOLS 2>&1 | $FYAD --title="$YTITLE - UPDATING" --text="\n  <b>Installing kdztools ...</b>\n" --width=700 --height=600 --text-info --listen --tail --button=Close
    else
        F_ERR ktoolsupdate $DLKDZ "\n  Without this SALT will not work!\n  ABORTED. \n"
    fi
fi

# check if device in dl mode connected
DEVCON=99
while [ $DEVCON -ne 0 ];do
    [ $DEVCON -eq 11 ] && break
    F_LOG "DEVCON before: $DEVCON"
    F_CHKDEVCON
    DEVCON=$?
    F_LOG "DEVCON after: $DEVCON"
done

# check how we get started
EXPERIMENTAL=$(echo "$@"|grep -c experimental)

F_LOG "EXPERIMENTAL: $EXPERIMENTAL"

# main func
F_MAIN(){
    if [ $DEVCON -ne 11 ];then
        DEVINF=$(F_GETINFO)
        for i in $DEVINF;do
            F_ELOG "parsing $i"
            case ${i/:*/} in
                usu)
                LGUSUA=${i/*:/}
                if [ $LGUSUA == 1 ];then
                    LGUSU="Unofficially_unlocked_by_UsU"
                else
                    LGUSU="no_UsU"
                fi
                ;;
                arb)
                DEVARBVAL=$(echo ${i}| cut -d ":" -f 2)
                DEVARBEMPT=$(echo ${i}| cut -d ":" -f 3)
                if [ $DEVARBEMPT -eq 0 ];then
                    DEVARB=$DEVARBVAL
                else
                    DEVARB="ARB_unknown"
                fi
                ;;
                battery_level) LGBATT=${i/*:/};;
                model_name) LGMODEL=${i/*:/};;
                device_sw_version) LGSWV=${i/*:/};;
                secure_device) LGSEC=${i/*:/};;
                device_factory_version) LGFACV=${i/*:/};;
                target_country) LGCOUNTRY=${i/*:/};;
                *) F_ELOG "unknown parameter: $i" ;;
            esac
        done        
    fi
    [ -z $LGUSUA ] && LGUSU=no_device_found
    [ -z $LGMODEL ] && LGMODEL=no_device_found
    [ -z $LGSWV ] && LGSWV=no_device_found 
    [ -z $LGFACV ] && LGFACV=no_info_found
    [ -z $LGCOUNTRY ] && LGCOUNTRY=no_device_found
    [ -z $LGSEC ] && LGSEC=no_device_found
    [ -z $LGBATT ] && LGBATT=no_device_found
    [ -z $DEVARB ] && DEVARB=no_ARB_info_found
    
    # main SALT screen depends on experimental flag
    if [ $EXPERIMENTAL -ne 1 ];then
 
      $FYAD --title="$YTITLE" --width=800 --image="$SICONS/salt_logo_128x128.png" --text "\n  <b>$TFULLNAME</b>\n  is a replacement for the windows software LGUP (plus MANY more features!!)\n  and brought to you by <b>steadfasterX</b>.\n\n  $TNAME is based on several tools. Click the ABOUT button to find out more!\n\n  The following comes directly from your device:\n  (<i>\"no_device_found\"</i> if no device connected)" \
        --form \
        --field="  Device model":RO $LGMODEL \
        --field="  Firmware":RO $LGSWV \
        --field="  Firmware (detailed)":RO $LGFACV \
        --field="  Country":RO $LGCOUNTRY \
        --field="  UsU":RO $LGUSU \
        --field="  Secure Device":RO $LGSEC \
        --field="  Battery level":RO $LGBATT \
        --field="  AntiRollback":RO $DEVARB \
        --field="  <span color='#ff0000'>REBOOT your device</span>":FBTN "$SALTPATH/reboot" \
        --field="Get Support / ABOUT / CREDITS!$SICONS/log_16x16.png":FBTN "bash -c F_ABOUT" \
        --field="  ADVANCED Menu!$SICONS/advanced_16x16.png!This contains tools not for the average user!":FBTN "bash -c F_ADVMENU" \
        --field="\n  <b><span color='#ff0000'>Mouse-Over a button to get more details!</span></b>":LBL \
        true \
        --buttons-layout=spread \
        --button="!$SICONS/update_48x48.png!Updating SALT (kdztools, lglaf, SALT)":"bash -c F_UPDATE" \
        --button="  Backup!$SICONS/backup.png!Make a full or basic backup while in download mode":"bash -c F_BACKUP" \
        --button="Extract!$SICONS/extract_48x48.png!Extract a KDZ file. If you want to flash choose Extract+Flash instead":"bash -c F_STARTKDZ"
    else
      $FYAD --title="$YTITLE - EXPERIMENTAL" --width=800 --image="$SICONS/salt_logo_128x128.png" --text "\n  <b>$TFULLNAME</b>\n  is a replacement for the windows software LGUP (plus MANY more features!!)\n  and brought to you by <b>steadfasterX</b>.\n\n  $TNAME is based on several tools. Click the ABOUT button to find out more!\n\n  The following comes directly from your device:\n  (<i>\"no_device_found\"</i> if no device connected)" \
        --form \
        --field="  Device model":RO $LGMODEL \
        --field="  Firmware":RO $LGSWV \
        --field="  Firmware (detailed)":RO $LGFACV \
        --field="  Country":RO $LGCOUNTRY \
        --field="  Secure Device":RO $LGSEC \
        --field="  Battery level":RO $LGBATT \
        --field="  AntiRollback":RO $DEVARB \
        --field="  <span color='#ff0000'>REBOOT your device</span>":FBTN "$SALTPATH/reboot" \
        --field="Get Support / ABOUT / CREDITS!$SICONS/log_16x16.png":FBTN "bash -c F_ABOUT" \
        --field="  ADVANCED Menu!$SICONS/advanced_16x16.png!This contains tools not for the average user!":FBTN "bash -c F_ADVMENU" \
        --field="\n  <b><span color='#ff0000'>Mouse-Over a button to get more details!</span></b>":LBL \
        true \
        --buttons-layout=spread \
        --button="!$SICONS/update_48x48.png!Updating SALT (kdztools, lglaf, SALT)":"bash -c F_UPDATE" \
        --button="  Backup!$SICONS/backup.png!Make a full or basic backup while in download mode":"bash -c F_BACKUP" \
        --button="Extract!$SICONS/extract_48x48.png!Extract a KDZ file. If you want to flash choose Extract+Flash instead":"bash -c F_STARTKDZ" \
        --button="Flash (folder)!$SICONS/flash_48x48.png!This will flash one or multiple partitions from any folder (e.g. from a previous backup)":"bash -c F_FLASHPART "\
        --button=" Flash (kdz)!$SICONS/flashkdz_70x48.png!Extract and Flash like LGUP would do":"bash -c F_STARTKDZFL"
    fi
}
F_MAIN

F_EXIT "main->end" 0 full
