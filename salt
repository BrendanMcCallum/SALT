#!/bin/bash
################################################################
#
# SALT - [S]teadfasterX [A]ll-in-one [L]G [T]ool
#
# Copyright (C): 2017, steadfasterX <steadfastX|boun.cr>
#
# Main program for SALT
#
################################################################

# the vars for SALT
VARS="${0%/*}/salt.vars"
source $VARS
[ $? -ne 0 ] && "ERROR: Missing requirement <$VARS>." && exit 3

# the functions for the lglaf GUI
FUNCS="${0%/*}/salt.func"
source $FUNCS 
[ $? -ne 0 ] && "ERROR: Missing requirement <$FUNCS>." && exit 3

echo -e "$(date '+%F %T'): Starting $TNAME v${VERSION}!\n****************************************************\n" > $LOG

# check requirements:
[ ! -x $YAD ]&& F_ELOG "FATAL ERROR!! Missing requirement <yad>. Install YAD and try again!" && F_EXIT yad-missing 3
[ ! -x $LAFTERM ] && F_ERR no-lafterminal 3 "\n  ERROR!\n\n  Missing xTerminal (usually xterm).\n  Install xterm or check salt.vars file."
[ ! -x $GIT ] && F_ERR no-git 3 "\n  ERROR!\n\n  Missing GIT client.\n  Install git or check salt.vars file."

# check root:
ME=$(id -u)
if [ "$ME" -ne 0 ];then
    echo -e '\nI need more POWER! If asked now type in your sudo password to restart with root perms (wait 20s or press CTRL+C to abort)'
    sudo $0 &
    sleep 20s
    F_EXIT no-root-end-here
fi

# check the base:
if [ ! -d "$LAFPATH" ];then
    F_ELOG "First start of SALT? Expected LG LAF NG here: $LAFPATH"
    DLLAF=$(F_MSG 400 "\n  First start of SALT?\n\n  Expected <b><u>lglaf</u></b> here:\n  ${LAFPATH}\n\n  but it is missing..\n\n  Should I download it for you now?" "--button=Yes:0 --button=Abort:1")
    #DLLAF=$MERR
    if [ "$DLLAF" -eq 0 ];then
        $GIT clone --progress $LAFGIT $LAFPATH 2>&1 | $FYAD --title="$YTITLE - UPDATING" --text="\n  <b>Installing LGLAF ...</b>\n" --height=600 --width=700 --text-info --listen --tail --button=Close
    else
        F_ERR lafupdate $DLLAF "\n  Without this SALT will not work!\n  ABORTED. \n"
    fi
fi
if [ ! -d "$KDZTOOLS" ];then
    F_ELOG "First start of SALT? Expected kdztools here: $KDZTOOLS"
    DLKDZ=$(F_MSG 400 "\n  First start of SALT?\n\n  Expected <b><u>kdztools</u></b> here:\n  ${KDZTOOLS}\n\n  but it is missing..\n\n  Should I download it for you now?" "--button=Yes:0 --button=Abort:1")
    if [ "$DLKDZ" -eq 0 ];then
        $GIT clone --progress $KDZGIT $KDZTOOLS 2>&1 | $FYAD --title="$YTITLE - UPDATING" --text="\n  <b>Installing kdztools ...</b>\n" --width=700 --height=600 --text-info --listen --tail --button=Close
    else
        F_ERR ktoolsupdate $DLKDZ "\n  Without this SALT will not work!\n  ABORTED. \n"
    fi
fi


# main func
F_MAIN(){
DEVINF=$(F_GETINFO)
for i in $DEVINF;do
    F_ELOG "parsing $i"
    case ${i/:*/} in
        arb) DEVARB=${i/*:/};;
        battery_level) LGBATT=${i/*:/};;
        model_name) LGMODEL=${i/*:/};;
        device_sw_version) LGSWV=${i/*:/};;
        secure_device) LGSEC=${i/*:/};;
        device_factory_version) LGFACV=${i/*:/};;
        target_country) LGCOUNTRY=${i/*:/};;
        *) F_ELOG "unknown parameter: $i" ;;
    esac
done        

[ -z $LGMODEL ] && LGMODEL=no_device_found && DEVARB=no_device_found
[ -z $LGSWV ] && LGSWV=no_device_found && DEVARB=no_device_found
[ -z $LGFACV ] && LGFACV=no_device_found && DEVARB=no_device_found
[ -z $LGCOUNTRY ] && LGCOUNTRY=no_device_found && DEVARB=no_device_found
[ -z $LGSEC ] && LGSEC=no_device_found && DEVARB=no_device_found
[ -z $LGBATT ] && LGBATT=no_device_found && DEVARB=no_device_found
[ -z $DEVARB ] && DEVARB=no_ARB_info_found

# translate bootloader locking state
case "$LGSEC" in
    S) LGSEC="locked"
    ;;
    U) LGSEC="UNLOCKED"
    ;;
esac

# main SALT screen 
$FYAD --title="$YTITLE" --width=600 --image="$SICONS/salt_logo_128x128.png" --text "\n  <b>$TFULLNAME</b>\n  is a replacement for the windows software LGUP (plus MANY more features!!)\n  and brought to you by <b>steadfasterX</b>.\n\n  $TNAME is based on several tools. Click the ABOUT button to find out more!\n\n  The following comes directly from your device:\n  (<i>\"no_device_found\"</i> if no device connected)" \
    --form \
    --field="  Device model":RO $LGMODEL \
    --field="  Firmware":RO $LGSWV \
    --field="  Firmware (detailed)":RO $LGFACV \
    --field="  Country":RO $LGCOUNTRY \
    --field="  Bootloader":RO $LGSEC \
    --field="  Battery level":RO $LGBATT \
    --field="  AntiRollback":RO $DEVARB \
    --field="  <span color='#ff0000'>REBOOT your device</span>":FBTN "$SALTPATH/reboot" \
    --field="Get Support / ABOUT / CREDITS!$SICONS/log_16x16.png":BTN "$FYAD --image=\"$SICONS/salt_logo_128x128.png\" --title=\"$YTITLE - ABOUT\" --width=800 --height=200 --text \"\n  $TNAME is based on:\n\t- <a href='https://sourceforge.net/projects/yad-dialog'>YAD</a> - without this no GUI\n\t- the awesome <a href='https://github.com/Lekensteyn/lglaf'>LGLAF</a> code by Peter Wu\n\t- <a href='https://github.com/ehem/kdztools'>kdztools</a> by Elliott Mitchell\n\t- <b>MANY</b> enhancements by steadfasterX (including this GUI)\n\n  ${TNAME} sources:\n\t- <a href='https://github.com/steadfasterX/salt'>$TNAME</a>\n\t- <a href='https://github.com/steadfasterX/lglaf'>Patched LGLAF</a>\n\t- <a href='https://github.com/steadfasterX/salt'>Patched kdztools</a>\n\n  $TNAME support: <a href='https://tinyurl.com/salty'>XDA thread</a>\" --button=Close:0" \
    --field="  SALT debug log!$SICONS/log_16x16.png":FBTN "$FYAD --title=\"$YTITLE - DEBUGLOG\" --width=800 --height=800 --wrap --text-info --filename=$LOG --button=Close:0" \
    --field="\n  <b><span color='#ff0000'>Mouse-Over a button to get more details!</span></b>":LBL \
    true \
    --buttons-layout=spread \
    --button="!$SICONS/update_48x48.png!Updating SALT (kdztools, lglaf, SALT)":"bash -c F_UPDATE" \
    --button="Shell!$SICONS/terminal_48x48.png!Open an adb like shell while in download mode":"bash -c F_SHELL" \
    --button="Extract KDZ!$SICONS/archive_48x48.png!Extract a KDZ file. If you want to flash choose Extract+Flash instead":"bash -c F_STARTKDZ" \
    --button="Flash (folder)!$SICONS/flash_48x48.png!This will flash one or multiple partitions from any folder":"bash -c F_FLASHPART "\
    --button="Flash (KDZ)!$SICONS/kdzflash_48x48.png!Extract and Flash like LGUP would do":2 
UMODE=$?
} 

F_MAIN

# flash a kdz
if [ $UMODE -eq 2 ];then
    FLCHOICES=$($FYAD --title="$YTITLE - FLASH" --always-print-result --width=800 --text "\n  When proceeding you accept that there is no guarantee for nothing - nowhere.\n  I do my best to avoid problems but we all are humans right?\n  You do this on your own responsibility and own risk no matter what.\n\n  Select a KDZ file to flash:" --form \
        --field="":FL --file-filter="KDZ files (*.kdz)| *.kdz *.KDZ" \
        --field="\n":LBL \
        --field="Factory Reset\t(if  *unchecked*  may result in bootloop)":CHK \
        --field="Model Check\t(if  *unchecked*  may result in HARD BRICK)":CHK \
        --field="ARB Check\t(if  *unchecked*  may result in HARD BRICK)":CHK \
        --field=:LBL \
        --field="TEST run\t\t(will  *not*  flash anything)":CHK \
        undef true true true true true true\
        --button="Agree &amp; Continue":0 \
        --button="Cancel":1 \
        )
    FLERR=$?
    [ $FLERR -ne 0 ] && F_EXIT flashing-select $FLERR 
 
    LGKDZ=$(echo "$FLCHOICES" | cut -d '|' -f 1)
    LGFR=$(echo "$FLCHOICES" | cut -d '|' -f 3)
    LGCHKMOD=$(echo "$FLCHOICES" | cut -d '|' -f 4)
    LGARB=$(echo "$FLCHOICES" | cut -d '|' -f 5)
    LGDRY=$(echo "$FLCHOICES" | cut -d '|' -f 7)

    F_ELOG "LGKDZ = $LGKDZ, LGFR = $LGFR, LGCHKMOD = $LGCHKMOD, LGARB = $LGARB, LGDRY = $LGDRY"

    [ ! -f "$LGKDZ" ] && F_ERR flashing-kdz-invalid 3 "\n  <b>ERROR</b>\n\n  The file\n  $LGKDZ\n  does not exist!\n"

    F_CHKDEVCON
    if [ $? -eq 0 ];then
        F_ELOG "device connected... going on!"
        F_FLASHKDZ "$LGKDZ" "$LGFR" "$LGCHKMOD" "$LGARB" "$LGDRY"
    else
        F_MSG 600 "\n  ERROR!\n\n  NO DEVICE CONNECTED?\n  If you have connected your device ensure that it is in DOWNLOAD mode\n  (not fastboot, not recovery, not booted Android)" "--button=Return:0"
    fi
fi


F_ELOG "SALT end!"
